# Versão do Docker Compose
# Você pode remover a linha 'version: '3.8'' para evitar o aviso de "obsolete"
# version: '3.8' 

# Definição dos nossos serviços (containers)
services:
  # Nosso serviço de API (backend)
  api:
    # O contexto de build agora é a RAIZ do seu projeto.
    # Isso permite que o Dockerfile acesse tanto 'backend/' quanto 'frontend/'
    build:
      context: .  # <<<< ESSA É A MUDANÇA MAIS IMPORTANTE AQUI!
      dockerfile: ./backend/Dockerfile # <<<< E AQUI, o caminho completo para o Dockerfile
    ports:
      - "3000:3000" # Mapeia a porta 3000 do seu PC para a 3000 do container
    env_file:
      - .env # Carrega as variáveis de ambiente do arquivo .env (da raiz do projeto)
    environment:
      # Sobrescrevemos o host e a porta para a comunicação DENTRO do Docker
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      - db # Diz para este serviço esperar o serviço 'db' estar pronto

  # Nosso serviço de Banco de Dados
  db:
    image: postgres:16-alpine # Usa a imagem oficial do PostgreSQL
    environment:
      # Agora estas variáveis serão lidas do .env na raiz
      POSTGRES_USER: ${DB_USER} 
      POSTGRES_PASSWORD: ${DB_PASSWORD} 
      POSTGRES_DB: ${DB_DATABASE} 
    ports:
      - "5433:5432" # Mapeia a porta 5433 do seu PC para a 5432 do container
    volumes:
      - postgres_data:/var/lib/postgresql/data # Volume para persistir os dados
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql # Caminho ajustado para init.sql

# Definição dos volumes nomeados
volumes:
  postgres_data: